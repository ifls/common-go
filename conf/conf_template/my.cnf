[client]
default-character-set 	= utf8mb4
user					= root
password				= 123456
socket = /data/mysql/mysql.sock
port = 3306

[mysql]
no-auto-rehash
# 登录数据库后显示当前位置
prompt="Mysql [\d]> "


[mysqld]
# mysql 使用的用户
user                    = mysql
#监听端口
port                    = 3306
extra-port              = 4306
# 服务器标志
server_id               = 11
bind_address 			= 0.0.0.0
# socket 存放位置
socket                  = /data/mysql/mysql.sock
#mysql 安装路径
basedir                 = /usr/local/mysql
# 数据文件目录
datadir                 = /data/mysql/data
# 进程pid存放在此文件
pid-file                = /data/mysql/mysql.pid

autocommit 	= 0
# utf-8编码超集， 能够存放4字节表情符号
character_set_server=utf8mb4
# 禁用域名解析，强制客户端使用ip链接
skip_name_resolve
tmpdir = /tmp
# sql_mode = "STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER"
# 服务器关闭交互连接前等待的秒数
interactive_timeout = 1800
# 服务器关闭非交互连接前等待的秒数
wait_timeout = 1800

-------------------日志设置--------------------------------
# 错误日志文件位置
log-error               = /data/mysql/mysql.log
# 开启慢查询
slow_query_log = 1
slow_query_log_file = slow.log
log_queries_not_using_indexes = 1
log_slow_admin_statements = 1
log_slow_slave_statements = 1
log_throttle_queries_not_using_indexes = 10
# binlog日志过期清理
expire_logs_days = 90
# 超过2秒会记录到mysql-slow.log
long_query_time = 2
min_examined_row_limit = 100
binlog-rows-query-log-events = 1 # 开启RBR模式下SQL记录
# 开启binlog
log_bin = mysql-bin
# 用于收集数据库服务性能, 修改后需要重启
performance_schema = 0
-------------------replication settings-------------------
master_info_repository = TABLE
relay_log_info_repository = TABLE
log-bin = mysql-bin
sync_binlog = 1
gtid_mode = on
enforce_gtid_consistency = 1
log_slave_updates = 1
# 日志格式 row mixed
binlog_format = mixed
relay_log = relay.log
relay_log_recovery = 1
binlog_gtid_simple_recovery = 1
slave_skip_errors = ddl_exist_errors
log-bin-trust-function-creators = 1 # 避免复制出现一些错误
log-slave-updates = 1 # 默认slave开启二进制日志
-------------------innodb settings-------------------
innodb_page_size = 8192
# innodb 允许使用的缓存池大小
innodb_buffer_pool_size = 6G
innodb_buffer_pool_instances = 8
innodb_buffer_pool_load_at_startup = 1
innodb_buffer_pool_dump_at_shutdown = 1
innodb_lru_scan_depth = 2000
# InnoDB事务在被回滚之前可以等待一个锁定的超时秒数。InnoDB在它自己的锁定表中自动检测事务死锁并且回滚事务。InnoDB用LOCK TABLES语句注意到锁定设置。默认值是50秒
innodb_lock_wait_timeout = 5
innodb_io_capacity = 4000
innodb_io_capacity_max = 8000
innodb_flush_method = O_DIRECT
innodb_file_format = Barracuda
innodb_file_format_max = Barracuda
innodb_log_group_home_dir = /redolog/
innodb_undo_directory = /undolog/
innodb_undo_logs = 128
innodb_undo_tablespaces = 3
innodb_flush_neighbors = 1
# 此参数确定数据日志文件的大小，更大的设置可以提高性能，但也会增加恢复故障数据库所需的时间
innodb_log_file_size = 4G
# innodb 日志文件内存大小 缓冲区更大能提高性能，但意外的故障将会丢失数据。
innodb_log_buffer_size = 2M
# 使用清除线程，定期清除无用数据， 0表示不使用
innodb_purge_threads = 4
innodb_large_prefix = 1
# 限制并发连接数 0表示不限制
innodb_thread_concurrency = 64
innodb_print_all_deadlocks = 1
innodb_strict_mode = 1
innodb_sort_buffer_size = 67108864
innodb_stats_persistent_sample_pages = 64 # 提供更文档的优化器执行计
innodb_autoinc_lock_mode = 2 # 提供更好的INSERT并发性能
innodb_online_alter_log_max_size=1G   ##增大内存，防止大表在DML比较多的场景下Online DDL操作失败
## 设置InnoDB层 缓存文件句柄的数量
innodb_open_files = 4096
-------------------优化-------------------
loose_innodb_numa_interleave=1 # 开启BP内存NUMA分配
event_scheduler = 1 # 默认启用事件功能
slave-rows-search-algorithms = 'INDEX_SCAN,HASH_SCAN' # 提供更好的从机回放算法
validate_password_policy = STRONG # 加强密码安全性
validate-password = FORCE_PLUS_PERMANENT # 加强密码安全性
# 设置缓存表的上限
table_open_cache = 4096
table_definition_cache = 4096   ## 调大缓存frm表的数量，很多小伙伴遇到这个问题，导致show table status运行时等待非常长的时间
table_open_cache_instances = 128   ##提升大并发下的性能
# 增大线程缓存，提升短连接的性能。通常来说都用连接池技术进行长连接操作，但是最近有一个项目用了短连接，遇到了坑。
# 缓存空闲线程个数
thread_cache_size = 64
-------------------semi sync replication settings-------------------
plugin_dir=/usr/local/mysql/lib/plugin
plugin_load = "rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
loose_rpl_semi_sync_master_enabled = 1
loose_rpl_semi_sync_slave_enabled = 1
loose_rpl_semi_sync_master_timeout = 5000

[mysqld-5.7]
innodb_buffer_pool_dump_pct = 40
innodb_page_cleaners = 4
innodb_undo_log_truncate = 1
innodb_max_undo_log_size = 2G
innodb_purge_rseg_truncate_frequency = 128
log_timestamps=system
transaction_write_set_extraction=MURMUR32
show_compatibility_56=on
--------------二进制日志相关-----------------------------------------
# binlog使用的内存大小(事务)
binlog_cache_size             = 2M

max_binlog_cache_size         = 4G
max_binlog_size               = 1G
--------------中继日志相关------------------------------------------
relay-log                     = /data/mysql/relay-bin
relay-log-info-file           = /data/mysql/relay-log.info
relay-log-index               = /data/mysql/relay-log.index
master-info-file              = /data/mysql/master.info
relay-log-recovery            = true
sync-relay-log-info           = 1

--------------全局缓存----------------------------------------------
# 索引缓冲区大小
key_buffer_size               = 2M
# 查询缓存类型
query_cache_type = 1
# 查询缓冲区大小
query_cache_size              = 1M
# 指定单个查询能够使用的缓冲区大小
query_cache_limit             = 1M

query_cache_min_res_unit      = 2k

--------------线程缓存----------------------------------------------
# 排序缓冲区大小
sort_buffer_size              = 2M
# 读缓冲区大小
read_buffer_size              = 2M
# 随机读缓冲区大小
read_rnd_buffer_size          = 16M
# 关联查询缓存
join_buffer_size              = 2M
# 临时表的大小设置
tmp_table_size                = 16M
thread_stack                  = 192k
# mysql 内存表容量设置
max_heap_table_size           = 64M


--------------连接相关-----------------------------------------------
back_log                      = 3000
#mysql 最大连接数
max_connections               = 10000
max_user_connections          = 2500
# 连接失败超过此项，直接禁止连接
max_connect_errors            = 20

--------------系统级别参数-------------------------------------------
explicit_defaults_for_timestamp = 1
# 设置允许mysql打开的文件数上限
open_files_limit              = 65535
# 限制插入和更新的最大size
max_allowed_packet            = 512M
# 默认开启innodb
default_storage_engine        = InnoDB
transaction_isolation         = READ-COMMITTED

----------------Innodb相关--------------------------------------------
innodb_data_file_path         = ibdata1:2G:autoextend
innodb_file_io_threads        = 24
# innodb使用后台线程处理数据页上的读 I/O请求,根据 CPU 核数设置
innodb_read_io_threads        = 24
# innodb使用后台线程处理数据页上的写 I/O请求,根据 CPU 核数设置
innodb_write_io_threads       = 24

# 0：如果innodb_flush_log_at_trx_commit的值为0,log buffer每秒就会被刷写日志文件到磁盘，提交事务的时候不做任何操作（执行是由mysql的master thread线程来执行的。
主线程中每秒会将重做日志缓冲写入磁盘的重做日志文件(REDO LOG)中。不论事务是否已经提交）默认的日志文件是ib_logfile0,ib_logfile1

1：当设为默认值1的时候，每次提交事务的时候，都会将log buffer刷写到日志。
2：如果设为2,每次提交事务都会写日志，但并不会执行刷的操作。每秒定时会刷到日志文件。要注意的是，并不能保证100%每秒一定都会刷到磁盘，这要取决于进程的调度。
每次事务提交的时候将数据写入事务日志，而这里的写入仅是调用了文件系统的写入操作，而文件系统是有 缓存的，所以这个写入并不能保证数据已经写入到物理磁盘
默认值1是为了保证完整的ACID。当然，你可以将这个配置项设为1以外的值来换取更高的性能，但是在系统崩溃的时候，你将会丢失1秒的数据。
设为0的话，mysqld进程崩溃的时候，就会丢失最后1秒的事务。设为2,只有在操作系统崩溃或者断电的时候才会丢失最后1秒的数据。InnoDB在做恢复的时候会忽略这个值。

总结
设为1当然是最安全的，但性能页是最差的（相对其他两个参数而言，但不是不能接受）。如果对数据一致性和完整性要求不高，完全可以设为2，如果只最求性能，例如高并发写的日志服务器，设为0来获得更高性能

innodb_flush_log_at_trx_commit = 1
# 为提高性能，MySQL可以以循环方式将日志文件写到多个文件。
innodb_log_files_in_group     = 3
# innodb主线程刷新缓存池中的数据，使脏数据比例小于75%
innodb_max_dirty_pages_pct    = 75
# 每个表 独立一个文件， 5.7以后是默认
innodb_file_per_table         = 1



----------------线程相关------------------------------------------------
thread_handling               = pool-of-threads
thread_pool_idle_timeout      = 180
thread_pool_max_threads       = 5000
thread_pool_size              = 24
thread_pool_oversubscribe     = 10
thread_pool_stall_limit       = 500

[mysqldump]
quick
#服务器发送和接受的最大包长度
max_allow_packet              = 64M

[mysqlhotcopy]
interactive-timeout

[myisamchk]
key_buffer_size = 256M
sort_buffer_size = 8M
read_buffer = 4M
write_buffer = 4M
