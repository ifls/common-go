// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package global

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServerType int32

const (
	ServerType_T_UNKNOWN ServerType = 0
	//日志
	ServerType_T_LOG ServerType = 1
	//web
	ServerType_T_WEB ServerType = 2
	//代理
	ServerType_T_PROXY ServerType = 3
	//nginx
	ServerType_T_NGINX ServerType = 4
	//redis
	ServerType_T_REDIS ServerType = 5
	//mysql数据库
	ServerType_T_MYSQL ServerType = 6
	//tidb数据库
	ServerType_T_TIDB ServerType = 7
	//消息队列
	ServerType_T_NSQ ServerType = 8
	//广播服务器
	ServerType_T_BR ServerType = 9
	//统计服务器
	ServerType_T_STAT ServerType = 10
	//排行榜服务器
	ServerType_T_RANK ServerType = 11
	//数据库中间件代理
	ServerType_T_DBPROXY ServerType = 12
	//文件服务器
	ServerType_T_FILE ServerType = 13
	//cdn
	ServerType_T_CDN ServerType = 14
	//四层负载均衡
	ServerType_T_LVS ServerType = 15
	//流处理
	ServerType_T_STREAM ServerType = 16
	//数据分析
	ServerType_T_ANAL ServerType = 17
	//管理后台
	ServerType_T_ADMIN ServerType = 18
	//监控服务器
	ServerType_T_MONITOR ServerType = 19
	//爬虫服务器
	ServerType_T_SCRAPY ServerType = 20
	ServerType_T_ETCD   ServerType = 21
	ServerType_T_MONGO  ServerType = 22
	ServerType_T_SSDB   ServerType = 23
)

var ServerType_name = map[int32]string{
	0:  "T_UNKNOWN",
	1:  "T_LOG",
	2:  "T_WEB",
	3:  "T_PROXY",
	4:  "T_NGINX",
	5:  "T_REDIS",
	6:  "T_MYSQL",
	7:  "T_TIDB",
	8:  "T_NSQ",
	9:  "T_BR",
	10: "T_STAT",
	11: "T_RANK",
	12: "T_DBPROXY",
	13: "T_FILE",
	14: "T_CDN",
	15: "T_LVS",
	16: "T_STREAM",
	17: "T_ANAL",
	18: "T_ADMIN",
	19: "T_MONITOR",
	20: "T_SCRAPY",
	21: "T_ETCD",
	22: "T_MONGO",
	23: "T_SSDB",
}

var ServerType_value = map[string]int32{
	"T_UNKNOWN": 0,
	"T_LOG":     1,
	"T_WEB":     2,
	"T_PROXY":   3,
	"T_NGINX":   4,
	"T_REDIS":   5,
	"T_MYSQL":   6,
	"T_TIDB":    7,
	"T_NSQ":     8,
	"T_BR":      9,
	"T_STAT":    10,
	"T_RANK":    11,
	"T_DBPROXY": 12,
	"T_FILE":    13,
	"T_CDN":     14,
	"T_LVS":     15,
	"T_STREAM":  16,
	"T_ANAL":    17,
	"T_ADMIN":   18,
	"T_MONITOR": 19,
	"T_SCRAPY":  20,
	"T_ETCD":    21,
	"T_MONGO":   22,
	"T_SSDB":    23,
}

func (x ServerType) String() string {
	return proto.EnumName(ServerType_name, int32(x))
}

func (ServerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

type ServerPort int32

const (
	ServerPort_UNKNOWN ServerPort = 0
	ServerPort_LOG     ServerPort = 30001
	ServerPort_MONGO   ServerPort = 27017
	ServerPort_REDIS   ServerPort = 6379
	ServerPort_MYSQL   ServerPort = 3306
	ServerPort_TIDB    ServerPort = 4000
	ServerPort_WEB     ServerPort = 8080
	ServerPort_ETCD    ServerPort = 2379
	ServerPort_SCRAPY  ServerPort = 7778
	ServerPort_NSQ     ServerPort = 4150
	ServerPort_SSDB    ServerPort = 8888
)

var ServerPort_name = map[int32]string{
	0:     "UNKNOWN",
	30001: "LOG",
	27017: "MONGO",
	6379:  "REDIS",
	3306:  "MYSQL",
	4000:  "TIDB",
	8080:  "WEB",
	2379:  "ETCD",
	7778:  "SCRAPY",
	4150:  "NSQ",
	8888:  "SSDB",
}

var ServerPort_value = map[string]int32{
	"UNKNOWN": 0,
	"LOG":     30001,
	"MONGO":   27017,
	"REDIS":   6379,
	"MYSQL":   3306,
	"TIDB":    4000,
	"WEB":     8080,
	"ETCD":    2379,
	"SCRAPY":  7778,
	"NSQ":     4150,
	"SSDB":    8888,
}

func (x ServerPort) String() string {
	return proto.EnumName(ServerPort_name, int32(x))
}

func (ServerPort) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func init() {
	proto.RegisterEnum("global.ServerType", ServerType_name, ServerType_value)
	proto.RegisterEnum("global.ServerPort", ServerPort_name, ServerPort_value)
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 355 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0x3f, 0x4e, 0xeb, 0x40,
	0x10, 0xc6, 0x9f, 0x93, 0xd8, 0xb1, 0xc7, 0xc9, 0x7b, 0xf3, 0x86, 0x7f, 0xa2, 0x82, 0x3a, 0x05,
	0x12, 0xa2, 0x45, 0x42, 0x76, 0x6c, 0x22, 0x2b, 0xf6, 0x3a, 0xf1, 0x2e, 0x24, 0xa9, 0x2c, 0x22,
	0x45, 0x34, 0x91, 0x1c, 0x99, 0x08, 0x89, 0x23, 0x20, 0x1a, 0x8e, 0xc0, 0x15, 0x68, 0x50, 0xee,
	0x40, 0xc9, 0x0d, 0x28, 0xc3, 0x25, 0xd0, 0x7a, 0x8c, 0x44, 0x37, 0xb3, 0xf3, 0xcd, 0xb7, 0xdf,
	0xfe, 0x16, 0x3a, 0x77, 0x8b, 0xf2, 0x7e, 0x51, 0x9e, 0xac, 0xca, 0x62, 0x5d, 0x90, 0x75, 0xbb,
	0x2c, 0xe6, 0x37, 0xcb, 0xde, 0xa6, 0x01, 0x20, 0xab, 0x81, 0x7a, 0x58, 0x2d, 0xa8, 0x0b, 0x8e,
	0xca, 0xaf, 0xc4, 0x50, 0xa4, 0x13, 0x81, 0x7f, 0xc8, 0x01, 0x53, 0xe5, 0x71, 0x3a, 0x40, 0x83,
	0xcb, 0x49, 0xe8, 0x63, 0x83, 0x5c, 0x68, 0xab, 0x7c, 0x94, 0xa5, 0xd3, 0x19, 0x36, 0xb9, 0x11,
	0x83, 0x48, 0x4c, 0xb1, 0xc5, 0x4d, 0x16, 0x06, 0x91, 0x44, 0x93, 0x9b, 0x64, 0x26, 0xc7, 0x31,
	0x5a, 0x04, 0x60, 0xa9, 0x5c, 0x45, 0x81, 0x8f, 0x6d, 0xb6, 0x12, 0x72, 0x8c, 0x36, 0xd9, 0xd0,
	0x52, 0xb9, 0x9f, 0xa1, 0xc3, 0x02, 0xa9, 0x3c, 0x85, 0xc0, 0x75, 0xe6, 0x89, 0x21, 0xba, 0x9c,
	0x28, 0xf0, 0xf9, 0xba, 0x0e, 0x8f, 0x2e, 0xa3, 0x38, 0xc4, 0x2e, 0xfb, 0xf4, 0x03, 0x81, 0x7f,
	0xeb, 0xa0, 0xd7, 0x12, 0xff, 0x51, 0x07, 0x6c, 0x6d, 0x94, 0x85, 0x5e, 0x82, 0xc8, 0x7a, 0x4f,
	0x78, 0x31, 0xfe, 0xe7, 0x40, 0x5e, 0x90, 0x44, 0x02, 0x89, 0x7d, 0x93, 0x54, 0x44, 0x2a, 0xcd,
	0x70, 0xa7, 0xde, 0xea, 0x67, 0xde, 0x68, 0x86, 0xbb, 0xbc, 0x15, 0xaa, 0x7e, 0x80, 0x7b, 0xf5,
	0x33, 0x52, 0x31, 0x48, 0x71, 0xbf, 0x4e, 0x29, 0x03, 0x1f, 0x0f, 0x7a, 0x4f, 0xc6, 0x0f, 0xba,
	0x51, 0x51, 0xae, 0xb5, 0xee, 0x37, 0xb8, 0xa6, 0xc6, 0xf6, 0xba, 0x35, 0xc8, 0x05, 0x93, 0xb7,
	0x1f, 0x3f, 0x0c, 0x02, 0x30, 0x19, 0xcf, 0xd7, 0xa9, 0xae, 0x99, 0xce, 0xf6, 0x90, 0x1c, 0x68,
	0x55, 0x70, 0x5e, 0x8e, 0xc8, 0x86, 0xa6, 0xc6, 0xfc, 0x7c, 0xa1, 0x0f, 0xab, 0x0c, 0xef, 0x44,
	0x2e, 0x58, 0x75, 0xb8, 0xcf, 0x73, 0xad, 0xd0, 0xf4, 0xde, 0x8e, 0xb5, 0xa2, 0x0a, 0xb3, 0x09,
	0xe7, 0x56, 0xf5, 0xaf, 0x67, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x9d, 0xab, 0x20, 0xe7,
	0x01, 0x00, 0x00,
}
